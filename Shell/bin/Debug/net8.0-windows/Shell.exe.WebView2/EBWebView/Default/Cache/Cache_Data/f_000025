import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/components/CommandManager.vue");/* Injection by vite-plugin-vue-inspector Start */
import { createElementBlock as __createElementBlock,createElementVNode as __createElementVNode } from "/node_modules/.vite/deps/vue.js?v=cc2d1bd2"
function _interopVNode(vnode) {
  if (vnode && vnode.props && 'data-v-inspector' in vnode.props) {
    const data = vnode.props['data-v-inspector']
    delete vnode.props['data-v-inspector']
    Object.defineProperty(vnode.props, '__v_inspector', { value: data, enumerable: false })
  }
  return vnode
}
function _createElementBlock(...args) { return _interopVNode(__createElementBlock(...args)) }
function _createElementVNode(...args) { return _interopVNode(__createElementVNode(...args)) }
/* Injection by vite-plugin-vue-inspector End */
import { defineComponent as _defineComponent } from "/node_modules/.vite/deps/vue.js?v=cc2d1bd2";
import { ref } from "/node_modules/.vite/deps/vue.js?v=cc2d1bd2";
import { logN } from "/src/utils/logHelper/logUtils.ts";
import CSharpBridgeV2 from "/src/correspond/CSharpBridgeV2.ts";
const _sfc_main = /* @__PURE__ */ _defineComponent({
  __name: "CommandManager",
  props: {
    pro: Array
  },
  setup(__props, { expose: __expose }) {
    __expose();
    const props = __props;
    const modules = ref([...props.pro || []]);
    const bridge = CSharpBridgeV2.getBridge();
    const invokeCommand = async (module) => {
      const params = Object.fromEntries(module.params.map((param) => [param.name, param.value]));
      logN.success("\u524D\u7AEF\u53D1\u9001\u7684\u53C2\u6570", module.name, params);
      try {
        bridge.send(module.name, params, (data) => {
          logN.warning("\u540E\u7AEF\u8FD4\u56DE\u7684\u53C2\u6570", module.name, data);
          module.result = JSON.stringify(data, null, 2);
        });
      } catch (error) {
        console.error(err);
        module.result = `Error: ${error}`;
      }
    };
    const __returned__ = { props, modules, bridge, invokeCommand };
    Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
    return __returned__;
  }
});
import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock,  toDisplayString as _toDisplayString,  vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, vModelCheckbox as _vModelCheckbox } from "/node_modules/.vite/deps/vue.js?v=cc2d1bd2";
const _hoisted_1 = {
  class: "container",
  "data-v-inspector": "src/components/CommandManager.vue:36:3"
};
const _hoisted_2 = {
  class: "modules-grid",
  "data-v-inspector": "src/components/CommandManager.vue:37:5"
};
const _hoisted_3 = {
  class: "module-title",
  "data-v-inspector": "src/components/CommandManager.vue:39:9"
};
const _hoisted_4 = {
  class: "module-description",
  "data-v-inspector": "src/components/CommandManager.vue:40:9"
};
const _hoisted_5 = {
  class: "params-container",
  "data-v-inspector": "src/components/CommandManager.vue:42:9"
};
const _hoisted_6 = ["for"];
const _hoisted_7 = ["id", "onUpdate:modelValue", "placeholder"];
const _hoisted_8 = ["id", "onUpdate:modelValue"];
const _hoisted_9 = ["onClick"];
const _hoisted_10 = {
  key: 0,
  class: "result-container",
  "data-v-inspector": "src/components/CommandManager.vue:67:9"
};
const _hoisted_11 = {
  class: "result-content",
  "data-v-inspector": "src/components/CommandManager.vue:69:11"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return _openBlock(), _createElementBlock("div", _hoisted_1, [
    _createElementVNode("div", _hoisted_2, [
      (_openBlock(true), _createElementBlock(
        _Fragment,
        null,
        _renderList($setup.modules, (module, index) => {
          return _openBlock(), _createElementBlock("div", {
            key: index,
            class: "module-card",
            "data-v-inspector": "src/components/CommandManager.vue:38:7"
          }, [
            _createElementVNode(
              "h2",
              _hoisted_3,
              _toDisplayString(module.name),
              1
              /* TEXT */
            ),
            _createElementVNode(
              "p",
              _hoisted_4,
              _toDisplayString(module.description),
              1
              /* TEXT */
            ),
            _createElementVNode("div", _hoisted_5, [
              (_openBlock(true), _createElementBlock(
                _Fragment,
                null,
                _renderList(module.params, (param, paramIndex) => {
                  return _openBlock(), _createElementBlock("div", {
                    key: paramIndex,
                    class: "param-item",
                    "data-v-inspector": "src/components/CommandManager.vue:43:11"
                  }, [
                    _createElementVNode("label", {
                      for: `${module.name}-${param.name}`,
                      class: "param-label",
                      "data-v-inspector": "src/components/CommandManager.vue:44:13"
                    }, _toDisplayString(param.label), 9, _hoisted_6),
                    param.type === "text" ? _withDirectives((_openBlock(), _createElementBlock("input", {
                      key: 0,
                      id: `${module.name}-${param.name}`,
                      "onUpdate:modelValue": ($event) => param.value = $event,
                      placeholder: param.placeholder,
                      type: "text",
                      class: "text-input",
                      "data-v-inspector": "src/components/CommandManager.vue:47:13"
                    }, null, 8, _hoisted_7)), [
                      [_vModelText, param.value]
                    ]) : _createCommentVNode("v-if", true),
                    param.type === "checkbox" ? _withDirectives((_openBlock(), _createElementBlock("input", {
                      key: 1,
                      id: `${module.name}-${param.name}`,
                      "onUpdate:modelValue": ($event) => param.value = $event,
                      type: "checkbox",
                      class: "checkbox-input",
                      "data-v-inspector": "src/components/CommandManager.vue:55:13"
                    }, null, 8, _hoisted_8)), [
                      [_vModelCheckbox, param.value]
                    ]) : _createCommentVNode("v-if", true)
                  ]);
                }),
                128
                /* KEYED_FRAGMENT */
              ))
            ]),
            _createElementVNode("button", {
              onClick: ($event) => $setup.invokeCommand(module),
              class: "action-button",
              "data-v-inspector": "src/components/CommandManager.vue:65:9"
            }, "\u89E6\u53D1 " + _toDisplayString(module.name), 9, _hoisted_9),
            module.result ? (_openBlock(), _createElementBlock("div", _hoisted_10, [
              _cache[0] || (_cache[0] = _createElementVNode(
                "h3",
                {
                  class: "result-title",
                  "data-v-inspector": "src/components/CommandManager.vue:68:11"
                },
                "\u7ED3\u679C",
                -1
                /* HOISTED */
              )),
              _createElementVNode(
                "pre",
                _hoisted_11,
                _toDisplayString(module.result),
                1
                /* TEXT */
              )
            ])) : _createCommentVNode("v-if", true)
          ]);
        }),
        128
        /* KEYED_FRAGMENT */
      ))
    ])
  ]);
}
import "/src/components/CommandManager.vue?vue&type=style&index=0&scoped=9064e990&lang.scss";
_sfc_main.__hmrId = "9064e990";
typeof __VUE_HMR_RUNTIME__ !== "undefined" && __VUE_HMR_RUNTIME__.createRecord(_sfc_main.__hmrId, _sfc_main);
import.meta.hot.on("file-changed", ({ file }) => {
  __VUE_HMR_RUNTIME__.CHANGED_FILE = file;
});
import.meta.hot.accept((mod) => {
  if (!mod) return;
  const { default: updated, _rerender_only } = mod;
  if (_rerender_only) {
    __VUE_HMR_RUNTIME__.rerender(updated.__hmrId, updated.render);
  } else {
    __VUE_HMR_RUNTIME__.reload(updated.__hmrId, updated);
  }
});
import _export_sfc from "/@id/__x00__plugin-vue:export-helper";
export default /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__scopeId", "data-v-9064e990"], ["__file", "D:/yuanll/NetVizor/ClientApp/src/components/CommandManager.vue"]]);

//# sourceMappingURL=data:application/json;base64,