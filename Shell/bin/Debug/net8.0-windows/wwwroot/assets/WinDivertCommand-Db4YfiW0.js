import{d as b,r as C,C as x,c as n,o as s,a,F as _,b as h,e as p,t as c,w as g,v as $,f as V,l as v,_ as B,g as G}from"./index-CPXraWqM.js";const M={class:"container"},N={class:"modules-grid"},w={class:"module-title"},D={class:"module-description"},I={class:"params-container"},P=["for"],U=["id","onUpdate:modelValue","placeholder"],A=["id","onUpdate:modelValue"],E=["onClick"],S={key:0,class:"result-container"},T={class:"result-content"},F=b({__name:"CommandManager",props:{pro:Array},setup(u){const i=C([...u.pro||[]]),l=x.getBridge(),m=async o=>{const r=Object.fromEntries(o.params.map(e=>[e.name,e.value]));v.success("前端发送的参数",o.name,r);try{l.send(o.name,r,e=>{v.warning("后端返回的参数",o.name,e),o.result=JSON.stringify(e,null,2)})}catch(e){console.error(err),o.result=`Error: ${e}`}};return(o,r)=>(s(),n("div",M,[a("div",N,[(s(!0),n(_,null,h(i.value,(e,k)=>(s(),n("div",{key:k,class:"module-card"},[a("h2",w,c(e.name),1),a("p",D,c(e.description),1),a("div",I,[(s(!0),n(_,null,h(e.params,(t,f)=>(s(),n("div",{key:f,class:"param-item"},[a("label",{for:`${e.name}-${t.name}`,class:"param-label"},c(t.label),9,P),t.type==="text"?g((s(),n("input",{key:0,id:`${e.name}-${t.name}`,"onUpdate:modelValue":d=>t.value=d,placeholder:t.placeholder,type:"text",class:"text-input"},null,8,U)),[[$,t.value]]):p("",!0),t.type==="checkbox"?g((s(),n("input",{key:1,id:`${e.name}-${t.name}`,"onUpdate:modelValue":d=>t.value=d,type:"checkbox",class:"checkbox-input"},null,8,A)),[[V,t.value]]):p("",!0)]))),128))]),a("button",{onClick:t=>m(e),class:"action-button"},"触发 "+c(e.name),9,E),e.result?(s(),n("div",S,[r[0]||(r[0]=a("h3",{class:"result-title"},"结果",-1)),a("pre",T,c(e.result),1)])):p("",!0)]))),128))])]))}}),O=B(F,[["__scopeId","data-v-389ed50c"]]),H=b({__name:"WinDivertCommand",setup(u){x.getBridge().listen("showMessage",l=>{console.log("11111111",l)});const i=[{name:"showMessage",description:"获取信息!!",params:[{name:"title",label:"标题",type:"text",value:"Vue",placeholder:"text"},{name:"content",label:"标题",type:"text",value:"Hello C#!",placeholder:"text"}],result:null},{name:"GetNetInfo",description:"GetNetInfo!!",params:[],result:null},{name:"GetProgramDiagnostics",description:"GetProgramDiagnostics!!",params:[],result:null},{name:"InspectProcess",description:"InspectProcess!!",params:[],result:null},{name:"GetAllTcpConnections",description:"GetAllTcpConnections!!",params:[],result:null}];return(l,m)=>(s(),G(O,{pro:i}))}});export{H as default};
